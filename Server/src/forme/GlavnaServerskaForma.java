/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Korisnik;
import java.awt.Color;
import javax.swing.JOptionPane;
import kontroler.KontrolerServer;
import modeli.ModelTabele;
import niti.PokreniServerNit;

/**
 *
 * @author Luka
 */
public class GlavnaServerskaForma extends javax.swing.JFrame {

    PokreniServerNit pokreniServerNit;
    
    /**
     * Creates new form GlavnaServerskaForma
     */
    public GlavnaServerskaForma() {
        initComponents();
        setLocationRelativeTo(null);
        KontrolerServer.getInstance().setGsf(this);
        labelServerStatus.setForeground(Color.red);
        btnZaustaviServer.setEnabled(false);
        srediTabelu();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelServerStatus = new javax.swing.JLabel();
        btnPokreniServer = new javax.swing.JButton();
        btnZaustaviServer = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaUlogovaniKorisnici = new javax.swing.JTable();
        btnIzbaciIzabranogKorisnika = new javax.swing.JButton();
        btnIzabaciSveKorisnike = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Server status"));

        labelServerStatus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelServerStatus.setText("Server nije pokrenut");

        btnPokreniServer.setText("Pokreni server");
        btnPokreniServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPokreniServerActionPerformed(evt);
            }
        });

        btnZaustaviServer.setText("Zaustavi server");
        btnZaustaviServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZaustaviServerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelServerStatus)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnPokreniServer)
                        .addGap(18, 18, 18)
                        .addComponent(btnZaustaviServer)))
                .addContainerGap(732, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelServerStatus)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPokreniServer)
                    .addComponent(btnZaustaviServer))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Ulogovani korisnici"));

        tabelaUlogovaniKorisnici.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaUlogovaniKorisnici);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnIzbaciIzabranogKorisnika.setText("Izbaci izabranog korisnika");
        btnIzbaciIzabranogKorisnika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzbaciIzabranogKorisnikaActionPerformed(evt);
            }
        });

        btnIzabaciSveKorisnike.setText("Izbaci sve korisnike");
        btnIzabaciSveKorisnike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzabaciSveKorisnikeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnIzbaciIzabranogKorisnika)
                        .addGap(18, 18, 18)
                        .addComponent(btnIzabaciSveKorisnike)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzbaciIzabranogKorisnika)
                    .addComponent(btnIzabaciSveKorisnike))
                .addContainerGap(181, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPokreniServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPokreniServerActionPerformed

        pokreniServerNit = new PokreniServerNit();
        pokreniServerNit.start();
       
        
    }//GEN-LAST:event_btnPokreniServerActionPerformed

    private void btnZaustaviServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZaustaviServerActionPerformed
        
        izbaciSveKorisnike();
        pokreniServerNit.interrupt();
    }//GEN-LAST:event_btnZaustaviServerActionPerformed

    private void btnIzbaciIzabranogKorisnikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzbaciIzabranogKorisnikaActionPerformed
        int row = tabelaUlogovaniKorisnici.getSelectedRow();
        if (KontrolerServer.getInstance().izbaciIzabranogKorisnika(row)) {
            osveziTabelu();
            JOptionPane.showMessageDialog(this, "Korisnik uspesno izbacen.");
        } else {
            JOptionPane.showMessageDialog(this, "Korisnik neuspesno izbacen.");
        }
        
    }//GEN-LAST:event_btnIzbaciIzabranogKorisnikaActionPerformed

    private void btnIzabaciSveKorisnikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzabaciSveKorisnikeActionPerformed
        izbaciSveKorisnike();
    }//GEN-LAST:event_btnIzabaciSveKorisnikeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GlavnaServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GlavnaServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GlavnaServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GlavnaServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GlavnaServerskaForma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzabaciSveKorisnike;
    private javax.swing.JButton btnIzbaciIzabranogKorisnika;
    private javax.swing.JButton btnPokreniServer;
    private javax.swing.JButton btnZaustaviServer;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelServerStatus;
    private javax.swing.JTable tabelaUlogovaniKorisnici;
    // End of variables declaration//GEN-END:variables


    private void srediTabelu() {
        tabelaUlogovaniKorisnici.setModel(new ModelTabele());
    }

    public void osveziTabelu() {
        ModelTabele mt = (ModelTabele) tabelaUlogovaniKorisnici.getModel();
        mt.fireTableDataChanged();
    }
    
    public void uspesnoPokrenutServer() {
        labelServerStatus.setText("Server je pokrenut!");
        labelServerStatus.setForeground(Color.BLACK);
        btnPokreniServer.setEnabled(false);
        btnZaustaviServer.setEnabled(true);
    }

    public void uspesnoZaustavljenServer() {
        labelServerStatus.setText("Server nije pokrenut!");
        labelServerStatus.setForeground(Color.RED);
        btnPokreniServer.setEnabled(true);
        btnZaustaviServer.setEnabled(false);
    }
    
    private void izbaciSveKorisnike() {
        if (KontrolerServer.getInstance().izbaciSveKorisnike()) {
            osveziTabelu();
            JOptionPane.showMessageDialog(this, "Korisnici uspesno izbaceni.");
        } else {
            JOptionPane.showMessageDialog(this, "Korisnici neuspesno izbaceni.");
        }
    }
}
